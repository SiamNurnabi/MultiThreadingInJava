***Every thread in java has some priority. It may be default priority generated by the JVM or customised priority set by the programmer.
The valid range of thread priorities is 1 to 10. Thread class provides following constants to represent some priority levels:
1. public static final int MIN_PRIORITY = 1;
2. public static final int NORM_PRIORITY = 5;
3. public static final int MAX_PRIORITY = 10;


Thread scheduler will use priorities to allocate the processor to the threads. The thread with the highest priority will get the processor.
If two threads have the same priority, we can't predict which thread will get the processor. It depends on thread scheduler.
It is varied from one JVM to another JVM.

***Thread class provides the following methods to get and set the thread priority:
1. public final int getPriority(): It returns the priority of the thread.
2. public final void setPriority(int newPriority): It sets the priority of the thread.

Allowed range of thread priorities is 1 to 10. If we try to set the priority out of the range, it will throw an IllegalArgumentException.
Example:
Thread t = new Thread();
t.setPriority(11); // IllegalArgumentException


The default priority of the main thread is 5. The default priority of the child thread is also 5.
The default priority of the child thread is the same as the priority of the parent thread.
In other words, the child thread inherits the priority of the parent thread.
